# beq、nop指令
.text
# 跳转，且目标在此跳转指令之前
# 跳转，且目标在此跳转指令之后
# 不跳转，且目标在此跳转指令之前
# 不跳转，且目标是此跳转指令
# 不跳转，且目标在此跳转指令之后

# 只要程序不TLE，则跳转，且目标是此跳转指令必定能做到
# 因为中止的标志就是1000ffff

# 1
ori $1, $0, 0x0001
nop
# 2
ori $2, $0, 0x0010
nop
# 1048576
lui $3, 0x0010
nop
# 16777232
lui $4, 0x0100
ori $4, $4, 0x0010
nop
# -1
lui $5, 0xffff
ori $5, $5, 0xffff
nop
# -241
lui $6, 0xffff
ori $6, $6, 0xff0f
nop
# -16776961
lui $7, 0xff00
ori $7, $7, 0x00ff
nop
# -268435456
lui $8, 0xf000
nop

# 开始测试
b0: beq $0, $0, b1
sw $1, 0($0)

# 跳转，且目标在此跳转指令之后
b2: beq $2, $2, b3
sw $3, 8($0)

# 跳转，且目标在此跳转指令之前
b1: beq $1, $1, b2
sw $2, 4($0)

# 不跳转，且目标在此跳转指令之前
b3: beq $2, $3, b0
sw $4, 12($0)

# 不跳转，且目标是此跳转指令
b4: beq $3, $4, b4
sw $5, 16($0)

# 不跳转，且目标在此跳转指令之后
b5: beq $4, $5, b6
sw $6, 20($0)

# 跳转，且目标在此跳转指令之后
jal	j1

# 跳转
j2: jr $ra

b6: sw $7, 24($0)

j1: sw $8, 28($0)

# 跳转，且目标在此跳转指令之前
jal j2

nop
